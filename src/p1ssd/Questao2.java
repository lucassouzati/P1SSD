/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p1ssd;

import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import weka.associations.Apriori;
import weka.associations.FilteredAssociator;
import weka.core.Instances;
import weka.core.converters.ConverterUtils;
import weka.filters.Filter;
import weka.filters.unsupervised.attribute.NumericToNominal;
import weka.filters.unsupervised.attribute.Remove;

/**
 *
 * @author lsiqueira
 */
public class Questao2 extends javax.swing.JFrame {

    /**
     * Creates new form Questao2
     */
    ConverterUtils.DataSource ds;
    Instances ins;
    private DefaultListModel atributos = new DefaultListModel();
    private int[] indices;
    File arquivos  = null;
    
    public Questao2() throws Exception {
        initComponents();
        
        this.ds = new ConverterUtils.DataSource("src/Respostas-28-07.arff");
        this.ins = ds.getDataSet();
        
         ins.setClassIndex(ins.numAttributes() - 1);
        String atributosString[] = new String[ins.numAttributes() - 1];
        
        for(int i = 0; i< ins.numAttributes(); i++){
            //System.out.println(ins.attribute(i));
        }
        
        
        //DefaultListModel atributos= new DefaultListModel();
        
        
        
        
        
    //    atributosList.setModel(atributos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        atributosList = new javax.swing.JList<>();
        jToggleButton1 = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        saidaTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Escolha um arquivo para encontrar associações");

        jButton1.setText("Importar Arquivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(atributosList);

        jToggleButton1.setText("Encontrar associações");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Selecione as variáveis que deseja encontrar associações");

        jLabel2.setText("Associações encontradas");

        saidaTextArea.setColumns(20);
        saidaTextArea.setLineWrap(true);
        saidaTextArea.setRows(5);
        jScrollPane2.setViewportView(saidaTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jToggleButton1))
                            .addComponent(jLabel3)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 12, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(155, 155, 155))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(jToggleButton1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator1)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 204, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        if(arquivos != null){
            int indices_atributos[] = atributosList.getSelectedIndices();

            String[] options = new String[2];
            options[0] = "-R";
            options[1] = "";
            Instances newData = ins;

            //for(int i = 0; i< ins.numAttributes(); i++){
                for(int j = 0; j<indices_atributos.length; j++){
                    if(j == indices_atributos.length - 1)
                        options[1] += (indices_atributos[j]+1);
                    else
                        options[1] += (indices_atributos[j]+1) + ",";
                }
            System.out.println(options[1]);

            Remove remove = new Remove();
            remove.setAttributeIndicesArray(indices);
            remove.setInvertSelection(false);

            try {
                remove.setOptions(options);
                remove.setInputFormat(ins);
                newData = Filter.useFilter(ins, remove);
            } catch (Exception ex) {
                Logger.getLogger(Questao2.class.getName()).log(Level.SEVERE, null, ex);
            }
            Instances filteredData = newData;
            NumericToNominal filter = new NumericToNominal();
            try {
                filter.setOptions(options);
                filter.setInputFormat(filteredData);
                filteredData = Filter.useFilter(newData, filter);
            } catch (Exception ex) {
                Logger.getLogger(Questao2.class.getName()).log(Level.SEVERE, null, ex);
            }

        Apriori apriori = new Apriori();
        apriori.setNumRules(5);
            try {
                apriori.buildAssociations(filteredData);

            } catch (Exception ex) {
                Logger.getLogger(Questao2.class.getName()).log(Level.SEVERE, null, ex);
            }


            //        FilteredAssociator filtere = new FilteredAssociator();filtere.set

            //        for(int i=0; i<indices_atributos.length; i++){
            //            ins.remove(indices_atributos[i]);
            //            
            //        }

            //Apriori apriori = new Apriori();
            //apriori.setClassIndex(ins.classIndex());
            //System.out.println(apriori);
            saidaTextArea.setText(apriori.getAssociationRules().getRules().toString());
        }else{
           JOptionPane.showMessageDialog(rootPane, "Importe um arquivo.");
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Escolha o arquivo...");
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        fc.setApproveButtonText("OK");
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setMultiSelectionEnabled(true);
        int resultado = fc.showOpenDialog(fc);
        
        try {
             if (resultado == JFileChooser.APPROVE_OPTION){
               arquivos = fc.getSelectedFile();
                 try {
                     this.carregarArquivo(arquivos.getPath());
                 } catch (Exception ex) {
                     Logger.getLogger(Questao2.class.getName()).log(Level.SEVERE, null, ex);
                 }
             }
            //this.carregarArquivo("");
            
            // listaAtributo = new JList(lista);  
        } catch (Exception ex) {
            Logger.getLogger(Questao2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Questao2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Questao2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Questao2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Questao2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Questao2().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Questao2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    private void carregarArquivo(String caminho) throws Exception{
        //System.out.println(caminho);
        //caminho = "src/testeweka/respostas.arff";
        ds = new ConverterUtils.DataSource(caminho);
        ins = ds.getDataSet();
        
        ins.setClassIndex(ins.numAttributes() - 1);

        Apriori apriori = new Apriori();
        apriori.setClassIndex(ins.classIndex());
        apriori.buildAssociations(ins);
        
        ArrayList<Atributo> atributos_aux = new ArrayList();
        indices = new int[ins.numAttributes()];
        for (int i = 0; i < ins.numAttributes(); i++) {
            Atributo a = new Atributo();
            a.setNome(ins.attribute(i).name());
            ArrayList<String> valores = new ArrayList();
            for (int j = 0; j < ins.attribute(i).numValues(); j++) {
                valores.add(ins.attribute(i).value(j));
            }
            a.setValores(valores);
            atributos_aux.add(a);
            indices[i] = i;
        }
        
        for (Atributo a : atributos_aux) {
            atributos.addElement(a.getNome());
            //System.out.println(a.getNome() + ": " + a.getValores());
        }
        atributosList.setModel(atributos);
        
        //System.out.println(listaAtributo.getModel().getElementAt(1).toString());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> atributosList;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextArea saidaTextArea;
    // End of variables declaration//GEN-END:variables
}
